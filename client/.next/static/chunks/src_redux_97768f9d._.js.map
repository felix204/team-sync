{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayd%C4%B1n/Desktop/Projelerim/team%20sync/client/src/redux/slices/authslice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { User } from \"@/types\";\r\n\r\ninterface AuthState {\r\n    user: User | null;\r\n    isAuthenticated: boolean;\r\n    isLoading: boolean;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n    user: null,\r\n    isAuthenticated: false,\r\n    isLoading: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name: \"auth\",\r\n    initialState,\r\n    reducers: {\r\n        setUser: (state, action: PayloadAction<User>) => {\r\n            state.user = action.payload;\r\n            state.isAuthenticated = true;\r\n            \r\n        },\r\n        logout: (state) => {\r\n            state.user = null;\r\n            state.isAuthenticated = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setUser, logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n\r\n"],"names":[],"mappings":";;;;;AAAA;;AASA,MAAM,eAA0B;IAC5B,MAAM;IACN,iBAAiB;IACjB,WAAW;AACf;AAEA,MAAM,YAAY,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC1B,MAAM;IACN;IACA,UAAU;QACN,SAAS,CAAC,OAAO;YACb,MAAM,IAAI,GAAG,OAAO,OAAO;YAC3B,MAAM,eAAe,GAAG;QAE5B;QACA,QAAQ,CAAC;YACL,MAAM,IAAI,GAAG;YACb,MAAM,eAAe,GAAG;QAC5B;IACJ;AACJ;AAEO,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,UAAU,OAAO;uCACrC,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayd%C4%B1n/Desktop/Projelerim/team%20sync/client/src/redux/slices/chatSlice.tsx"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Channel, Message } from \"@/types\";\r\n\r\ninterface ChatState {\r\n    channels: Channel[];\r\n    messages: Message[];\r\n    currentChannel: string | null;\r\n}\r\n\r\nconst initialState: ChatState = {\r\n    messages: [],\r\n    channels: [\r\n        { id: 'general', name: 'Genel Sohbet' },\r\n        { id: 'channel-1', name: 'Kanal 1' },\r\n    ],\r\n    currentChannel: 'general',\r\n};\r\n\r\nconst chatSlice = createSlice({\r\n    name: 'chat',\r\n    initialState,\r\n    reducers: {\r\n        addMessage: (state, action: PayloadAction<Message>) => {\r\n            state.messages.push(action.payload);\r\n        },\r\n        setCurrentChannel: (state, action: PayloadAction<string>) => {\r\n            state.currentChannel = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addMessage, setCurrentChannel } = chatSlice.actions;\r\nexport default chatSlice.reducer;"],"names":[],"mappings":";;;;;AAAA;;AASA,MAAM,eAA0B;IAC5B,UAAU,EAAE;IACZ,UAAU;QACN;YAAE,IAAI;YAAW,MAAM;QAAe;QACtC;YAAE,IAAI;YAAa,MAAM;QAAU;KACtC;IACD,gBAAgB;AACpB;AAEA,MAAM,YAAY,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IAC1B,MAAM;IACN;IACA,UAAU;QACN,YAAY,CAAC,OAAO;YAChB,MAAM,QAAQ,CAAC,IAAI,CAAC,OAAO,OAAO;QACtC;QACA,mBAAmB,CAAC,OAAO;YACvB,MAAM,cAAc,GAAG,OAAO,OAAO;QACzC;IACJ;AACJ;AAEO,MAAM,EAAE,UAAU,EAAE,iBAAiB,EAAE,GAAG,UAAU,OAAO;uCACnD,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayd%C4%B1n/Desktop/Projelerim/team%20sync/client/src/redux/store.tsx"],"sourcesContent":["import { configureStore } from \"@reduxjs/toolkit\";\r\nimport authReducer from \"./slices/authslice\";\r\nimport chatReducer from \"./slices/chatSlice\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        auth: authReducer,\r\n        chat: chatReducer,\r\n    },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\n\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IAChC,SAAS;QACL,MAAM,uIAAA,CAAA,UAAW;QACjB,MAAM,uIAAA,CAAA,UAAW;IACrB;AACJ","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Ayd%C4%B1n/Desktop/Projelerim/team%20sync/client/src/redux/provider.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store';\r\n\r\nexport function Providers({ children }: { children: React.ReactNode }) {\r\n  return <Provider store={store}>{children}</Provider>;\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKO,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,qBAAO,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,yHAAA,CAAA,QAAK;kBAAG;;;;;;AAClC;KAFgB","debugId":null}}]
}